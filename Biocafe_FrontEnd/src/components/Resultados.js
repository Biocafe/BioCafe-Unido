import React, { useEffect, useState, useRef } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import styles from "../styles/Resultados.module.css";
import HeaderMenu from "../components/HeaderMenu";
import GraficoShapiro from "../components/GraficoShapiro";
import GraficoLevene from "../components/GraficoLevene";
import GraficoAnova from "../components/GraficoAnova";
import GraficoDuncan from "../components/GraficoDuncan";
import InformeModal from "../components/InformeModal";
import Plot from "react-plotly.js";
import html2canvas from "html2canvas";
import jsPDF from "jspdf";
import * as XLSX from "xlsx";
import { FaImage, FaFilePdf, FaFileExcel, FaArrowLeft, FaEye } from "react-icons/fa";
import pruebasService from "../services/pruebasService";

const Resultados = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const modalRef = useRef();
  const [resultados, setResultados] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const [modalAbierto, setModalAbierto] = useState(null);

  useEffect(() => {
    const procesarResultados = async () => {
      if (!location.state || !location.state.tratamientos) {
        navigate("/");
        return;
      }

      setLoading(true);
      setError("");

      try {
        const tratamientos = location.state.tratamientos;
        
        // Obtener pruebas estad√≠sticas reales del backend
        const pruebasEstadisticas = await pruebasService.procesarResultadosCompletos(tratamientos);
        
        // Formatear resultados para el componente
        const resultadosFormateados = {
          tratamientos: tratamientos.map((t) => ({
            ...t,
            resultado: Number(t.valortto) // Usar el valor real, no simulado
          })),
          shapiro: pruebasEstadisticas.estadisticas.shapiro, // Objeto completo de Shapiro
          levene: pruebasEstadisticas.estadisticas.levene?.pValor || 0,
          anova: pruebasEstadisticas.estadisticas.anova?.pValor || 0,
          duncan: pruebasEstadisticas.estadisticas.duncan?.grupos || []
        };
        
        setResultados(resultadosFormateados);
      } catch (error) {
        console.error('Error al procesar resultados:', error);
        setError('Error al obtener las pruebas estad√≠sticas: ' + error.message);
        // No usar datos simulados - mostrar error al usuario
      } finally {
        setLoading(false);
      }
    };

    procesarResultados();
  }, [location, navigate]);

  const exportToImage = async () => {
    // Si hay un modal abierto, capturar el contenido del modal
    let element = modalRef.current;
    let filename = "resultados.png";
    
    if (modalAbierto) {
      // Buscar el contenido del modal abierto
      console.log('Modal detectado:', modalAbierto);
      const modalContent = document.querySelector('[class*="InformeModal_modalBody"], .modalBody, [class*="modalBody"]');
      console.log('Modal content encontrado:', modalContent);
      if (modalContent) {
        element = modalContent;
        filename = `informe_detallado_${modalAbierto}.png`;
        console.log('Usando contenido del modal para exportar');
      } else {
        console.log('No se encontr√≥ contenido del modal, usando contenido principal');
      }
    }
    
    const canvas = await html2canvas(element, {
      useCORS: true,
      allowTaint: true,
      scale: 2,
      height: element.scrollHeight,
      width: element.scrollWidth,
      scrollX: 0,
      scrollY: 0,
      windowWidth: element.scrollWidth,
      windowHeight: element.scrollHeight
    });
    const imgData = canvas.toDataURL("image/png");
    const link = document.createElement("a");
    link.href = imgData;
    link.download = filename;
    link.click();
  };

  const exportToPDF = async () => {
    // Si hay un modal abierto, capturar el contenido del modal
    let element = modalRef.current;
    let filename = "resultados.pdf";
    
    if (modalAbierto) {
      // Buscar el contenido del modal abierto
      console.log('Modal detectado en PDF:', modalAbierto);
      const modalContent = document.querySelector('[class*="InformeModal_modalBody"], .modalBody, [class*="modalBody"]');
      console.log('Modal content encontrado en PDF:', modalContent);
      if (modalContent) {
        element = modalContent;
        filename = `informe_detallado_${modalAbierto}.pdf`;
        console.log('Usando contenido del modal para PDF');
      } else {
        console.log('No se encontr√≥ contenido del modal en PDF, usando contenido principal');
      }
    }
    
    const canvas = await html2canvas(element, {
      useCORS: true,
      allowTaint: true,
      scale: 2,
      height: element.scrollHeight,
      width: element.scrollWidth,
      scrollX: 0,
      scrollY: 0,
      windowWidth: element.scrollWidth,
      windowHeight: element.scrollHeight
    });
    const imgData = canvas.toDataURL("image/png");

    const pdf = new jsPDF({
      orientation: "portrait",
      unit: "pt",
      format: "a4",
    });

    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();
    const margin = 20;
    const contentWidth = pageWidth - (margin * 2);
    
    const imgProps = pdf.getImageProperties(imgData);
    const imgWidth = imgProps.width;
    const imgHeight = imgProps.height;
    
    // Calcular dimensiones escaladas
    const ratio = Math.min(contentWidth / imgWidth, (pageHeight - margin * 2) / imgHeight);
    const scaledWidth = imgWidth * ratio;
    const scaledHeight = imgHeight * ratio;
    
    // Si la imagen cabe en una p√°gina
    if (scaledHeight <= pageHeight - margin * 2) {
      pdf.addImage(imgData, "PNG", margin, margin, scaledWidth, scaledHeight);
    } else {
      // Dividir en m√∫ltiples p√°ginas
      const maxHeightPerPage = pageHeight - margin * 2;
      const totalPages = Math.ceil(scaledHeight / maxHeightPerPage);
      
      for (let i = 0; i < totalPages; i++) {
        if (i > 0) pdf.addPage();
        
        const yOffset = i * maxHeightPerPage;
        const remainingHeight = Math.min(maxHeightPerPage, scaledHeight - yOffset);
        
        // Crear una secci√≥n de la imagen para esta p√°gina
        const sectionCanvas = document.createElement('canvas');
        const sectionCtx = sectionCanvas.getContext('2d');
        sectionCanvas.width = imgWidth;
        sectionCanvas.height = remainingHeight / ratio;
        
        const img = new Image();
        img.onload = () => {
          sectionCtx.drawImage(img, 0, -(yOffset / ratio), imgWidth, imgHeight);
          const sectionImgData = sectionCanvas.toDataURL('image/png');
          pdf.addImage(sectionImgData, 'PNG', margin, margin, scaledWidth, remainingHeight);
          
          if (i === totalPages - 1) {
            pdf.save(filename);
          }
        };
        img.src = imgData;
      }
      return;
    }
    
    pdf.save(filename);
  };

  const abrirModal = (tipo) => {
    setModalAbierto(tipo);
  };

  const cerrarModal = () => {
    setModalAbierto(null);
  };

  const getShapiroContent = () => {
    if (!resultados.shapiro?.W) return <div>No hay datos disponibles</div>;
    
    const n = resultados.shapiro.n || 0;
    const correlacionQQ = 0.998; // Valor de ejemplo, deber√≠a calcularse
    
    return (
      <div style={{ lineHeight: '1.6', fontSize: '14px' }}>
        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© es la Prueba de Shapiro-Wilk?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            La prueba de Shapiro-Wilk es una prueba estad√≠stica de normalidad que eval√∫a si una muestra de datos 
            proviene de una distribuci√≥n normal. Es considerada una de las pruebas m√°s potentes para detectar 
            desviaciones de la normalidad, especialmente efectiva para muestras peque√±as (n ‚â§ 50) pero tambi√©n 
            aplicable a muestras m√°s grandes.
          </p>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üî¨ ¬øC√≥mo se Aplic√≥ en sus Datos?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            Se analizaron <strong>{n} observaciones</strong> de su variable de inter√©s. La prueba calcul√≥ el estad√≠stico W 
            comparando los cuantiles observados con los esperados bajo normalidad. Los gr√°ficos generados incluyen:
          </p>
          <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
            <li><strong>Q-Q Plot:</strong> Compara cuantiles observados vs. te√≥ricos (correlaci√≥n = {correlacionQQ.toFixed(3)})</li>
            <li><strong>Histograma:</strong> Distribuci√≥n de datos vs. curva normal te√≥rica</li>
            <li><strong>Residuos:</strong> Desviaciones estandarizadas para detectar patrones an√≥malos</li>
          </ul>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üìä Interpretaci√≥n de Resultados</h5>
          <div style={{ 
            padding: '15px', 
            backgroundColor: typeof resultados.shapiro.pValor === 'number' && resultados.shapiro.pValor < 0.05 ? '#ffebee' : '#e8f5e8',
            borderRadius: '8px',
            border: '2px solid ' + (typeof resultados.shapiro.pValor === 'number' && resultados.shapiro.pValor < 0.05 ? '#f44336' : '#4caf50'),
            marginBottom: '15px'
          }}>
            <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>
              {typeof resultados.shapiro.pValor === 'number' && resultados.shapiro.pValor < 0.05 ? 
                '‚ùå CONCLUSI√ìN: Los datos NO siguen una distribuci√≥n normal' : 
                '‚úÖ CONCLUSI√ìN: Los datos siguen una distribuci√≥n normal'}
            </p>
            <p style={{ margin: '0', fontSize: '13px' }}>
              <strong>Estad√≠stico W:</strong> {typeof resultados.shapiro.W === 'number' ? resultados.shapiro.W.toFixed(4) : 'N/A'} 
              (valores cercanos a 1 indican normalidad)<br/>
              <strong>P-valor:</strong> {typeof resultados.shapiro.pValor === 'number' ? resultados.shapiro.pValor.toFixed(4) : 'N/A'} 
              (si p menor que 0.05, rechazamos normalidad)<br/>
              <strong>Correlaci√≥n Q-Q:</strong> {correlacionQQ.toFixed(3)} 
              (valores &gt; 0.95 sugieren buena normalidad)
            </p>
          </div>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© Significan estos Resultados?</h5>
          {typeof resultados.shapiro.pValor === 'number' && resultados.shapiro.pValor < 0.05 ? (
            <div>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
                Sus datos <strong>NO siguen una distribuci√≥n normal</strong>. Esto significa que:
              </p>
              <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
                <li>La distribuci√≥n puede ser asim√©trica, tener colas pesadas o m√∫ltiples modas</li>
                <li>Pueden existir valores at√≠picos que afectan la normalidad</li>
                <li>La variabilidad no es constante a lo largo del rango de datos</li>
              </ul>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify', fontWeight: 'bold', color: '#d32f2f' }}>
                ‚ö†Ô∏è IMPLICACIONES: No es recomendable usar pruebas param√©tricas (t-test, ANOVA) sin transformaciones.
              </p>
            </div>
          ) : (
            <div>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
                Sus datos <strong>siguen una distribuci√≥n normal</strong>. Esto significa que:
              </p>
              <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
                <li>La distribuci√≥n es sim√©trica alrededor de la media</li>
                <li>Aproximadamente 68% de los datos est√°n dentro de ¬±1 desviaci√≥n est√°ndar</li>
                <li>Los valores extremos son raros y siguen el patr√≥n esperado</li>
              </ul>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify', fontWeight: 'bold', color: '#388e3c' }}>
                ‚úÖ IMPLICACIONES: Es apropiado usar pruebas param√©tricas (t-test, ANOVA, correlaci√≥n de Pearson).
              </p>
            </div>
          )}
        </div>

        <div style={{ marginBottom: '15px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üí° Recomendaciones Espec√≠ficas</h5>
          {typeof resultados.shapiro.pValor === 'number' && resultados.shapiro.pValor < 0.05 ? (
            <div style={{ backgroundColor: '#fff3e0', padding: '15px', borderRadius: '8px', border: '1px solid #ff9800' }}>
              <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>Dado que los datos NO son normales:</p>
              <ul style={{ marginLeft: '20px', margin: '0' }}>
                <li><strong>Transformaciones:</strong> Considere log, ra√≠z cuadrada o Box-Cox</li>
                <li><strong>Pruebas alternativas:</strong> Use Mann-Whitney U, Kruskal-Wallis, o Wilcoxon</li>
                <li><strong>An√°lisis robusto:</strong> Emplee estad√≠sticas no param√©tricas</li>
                <li><strong>Verificaci√≥n:</strong> Revise outliers y considere su eliminaci√≥n justificada</li>
                {correlacionQQ < 0.90 && <li><strong>Atenci√≥n:</strong> La baja correlaci√≥n Q-Q ({correlacionQQ.toFixed(3)}) sugiere desviaciones importantes</li>}
              </ul>
            </div>
          ) : (
            <div style={{ backgroundColor: '#e8f5e8', padding: '15px', borderRadius: '8px', border: '1px solid #4caf50' }}>
              <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>Dado que los datos son normales:</p>
              <ul style={{ marginLeft: '20px', margin: '0' }}>
                <li><strong>An√°lisis param√©trico:</strong> Proceda con t-tests, ANOVA, regresi√≥n lineal</li>
                <li><strong>Intervalos de confianza:</strong> Use m√©todos basados en distribuci√≥n normal</li>
                <li><strong>Predicciones:</strong> Los modelos lineales ser√°n apropiados</li>
                <li><strong>Control de calidad:</strong> Puede usar gr√°ficos de control tradicionales</li>
                {correlacionQQ > 0.95 && <li><strong>Excelente:</strong> La alta correlaci√≥n Q-Q ({correlacionQQ.toFixed(3)}) confirma normalidad robusta</li>}
              </ul>
            </div>
          )}
        </div>

        <div style={{ 
          backgroundColor: '#e3f2fd', 
          padding: '15px', 
          borderRadius: '8px', 
          border: '1px solid #2196f3',
          fontSize: '13px'
        }}>
          <p style={{ margin: '0', fontWeight: 'bold', color: '#1976d2' }}>
            üìù NOTA T√âCNICA: Esta prueba es sensible al tama√±o de muestra. Con muestras muy grandes (n > 1000), 
            peque√±as desviaciones de normalidad pueden resultar significativas aunque no sean pr√°cticamente relevantes. 
            Siempre combine el an√°lisis estad√≠stico con la inspecci√≥n visual de los gr√°ficos.
          </p>
        </div>
      </div>
    );
  };

  const getLeveneContent = () => {
    if (!resultados.tratamientos) return <div>No hay datos disponibles</div>;
    
    const tratamientos = [...new Set(resultados.tratamientos.map(d => d.tratamiento))];
    const datos = resultados.tratamientos;
    
    // Calcular estad√≠sticas por grupo
    const estadisticasPorGrupo = tratamientos.map(tratamiento => {
      const datosTratamiento = datos.filter(d => d.tratamiento === tratamiento).map(d => parseFloat(d.resultado)).filter(v => !isNaN(v));
      const media = datosTratamiento.reduce((a, b) => a + b, 0) / datosTratamiento.length;
      const varianza = datosTratamiento.reduce((sum, val) => sum + Math.pow(val - media, 2), 0) / (datosTratamiento.length - 1);
      const desviacion = Math.sqrt(varianza);
      const cv = (desviacion / media) * 100;
      
      return {
        tratamiento,
        n: datosTratamiento.length,
        media,
        desviacionEstandar: desviacion,
        varianza,
        coeficienteVariacion: cv
      };
    });
    
    return (
      <div style={{ lineHeight: '1.6', fontSize: '14px' }}>
        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© es la Prueba de Levene?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            La prueba de Levene eval√∫a si las varianzas de dos o m√°s grupos son estad√≠sticamente iguales 
            (homogeneidad de varianzas). Es una prueba fundamental antes de aplicar ANOVA, ya que esta t√©cnica 
            asume que todos los grupos tienen la misma variabilidad. La prueba de Levene es robusta ante 
            desviaciones de la normalidad, a diferencia de otras pruebas como Bartlett.
          </p>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üî¨ ¬øC√≥mo se Aplic√≥ en sus Datos?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            Se analizaron <strong>{tratamientos.length} grupos</strong> con un total de <strong>{datos.length} observaciones</strong>. 
            La prueba calcul√≥ las desviaciones absolutas de cada observaci√≥n respecto a la mediana de su grupo, 
            y luego compar√≥ estas desviaciones entre grupos usando ANOVA. Los gr√°ficos generados incluyen:
          </p>
          <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
            <li><strong>Box Plot Mejorado:</strong> Muestra distribuci√≥n, outliers y estad√≠sticas por grupo</li>
            <li><strong>Residuos Absolutos:</strong> Dispersi√≥n de las desviaciones respecto a la mediana</li>
            <li><strong>Varianzas por Grupo:</strong> Comparaci√≥n visual de variabilidades con intervalos de confianza</li>
            <li><strong>Coeficiente de Variaci√≥n:</strong> Variabilidad relativa estandarizada por grupo</li>
          </ul>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üìä Interpretaci√≥n de Resultados</h5>
          <div style={{ 
            padding: '15px', 
            backgroundColor: typeof resultados.levene === 'number' && resultados.levene < 0.05 ? '#ffebee' : '#e8f5e8',
            borderRadius: '8px',
            border: '2px solid ' + (typeof resultados.levene === 'number' && resultados.levene < 0.05 ? '#f44336' : '#4caf50'),
            marginBottom: '15px'
          }}>
            <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>
              {typeof resultados.levene === 'number' && resultados.levene < 0.05 ? 
                '‚ùå CONCLUSI√ìN: Las varianzas NO son homog√©neas entre grupos' : 
                '‚úÖ CONCLUSI√ìN: Las varianzas son homog√©neas entre grupos'}
            </p>
            <p style={{ margin: '0', fontSize: '13px' }}>
              <strong>Estad√≠stico de Levene:</strong> {'N/A'} 
              (valores altos indican diferencias en varianzas)<br/>
              <strong>P-valor:</strong> {typeof resultados.levene === 'number' ? resultados.levene.toFixed(4) : 'N/A'} 
              (si p menor que 0.05, rechazamos homogeneidad)<br/>
              <strong>Grupos analizados:</strong> {tratamientos.length} grupos con tama√±os: {estadisticasPorGrupo.map(g => g.tratamiento + '(n=' + g.n + ')').join(', ')}
            </p>
          </div>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© Significan estos Resultados?</h5>
          {typeof resultados.levene === 'number' && resultados.levene < 0.05 ? (
            <div>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
                Las varianzas <strong>NO son homog√©neas</strong> entre sus grupos. Esto significa que:
              </p>
              <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
                <li>Algunos grupos tienen mayor variabilidad que otros</li>
                <li>La dispersi√≥n de los datos no es consistente entre grupos</li>
                <li>Puede haber factores no controlados que afectan la variabilidad</li>
                <li>Los grupos pueden tener diferentes niveles de precisi√≥n en las mediciones</li>
              </ul>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify', fontWeight: 'bold', color: '#d32f2f' }}>
                ‚ö†Ô∏è IMPLICACIONES: ANOVA cl√°sica puede no ser apropiada. Los resultados pueden ser sesgados.
              </p>
            </div>
          ) : (
            <div>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
                Las varianzas <strong>son homog√©neas</strong> entre sus grupos. Esto significa que:
              </p>
              <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
                <li>Todos los grupos tienen variabilidad similar</li>
                <li>La dispersi√≥n es consistente a trav√©s de los grupos</li>
                <li>Las condiciones experimentales fueron controladas adecuadamente</li>
                <li>La precisi√≥n de medici√≥n es similar entre grupos</li>
              </ul>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify', fontWeight: 'bold', color: '#388e3c' }}>
                ‚úÖ IMPLICACIONES: Es apropiado proceder con ANOVA y pruebas post-hoc param√©tricas.
              </p>
            </div>
          )}
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üìà An√°lisis Detallado por Grupo</h5>
          <div style={{ backgroundColor: '#f5f5f5', padding: '15px', borderRadius: '8px', marginBottom: '15px' }}>
            {estadisticasPorGrupo.map((grupo, index) => (
              <div key={index} style={{ marginBottom: '10px', fontSize: '13px' }}>
                <strong>Grupo {grupo.tratamiento}:</strong> n={grupo.n}, 
                Media={grupo.media.toFixed(3)}, 
                DE={grupo.desviacionEstandar.toFixed(3)}, 
                Varianza={grupo.varianza.toFixed(3)}, 
                CV={grupo.coeficienteVariacion.toFixed(1)}%
              </div>
            ))}
          </div>
        </div>

        <div style={{ marginBottom: '15px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üí° Recomendaciones Espec√≠ficas</h5>
          {typeof resultados.levene === 'number' && resultados.levene < 0.05 ? (
            <div style={{ backgroundColor: '#fff3e0', padding: '15px', borderRadius: '8px', border: '1px solid #ff9800' }}>
              <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>Dado que las varianzas NO son homog√©neas:</p>
              <ul style={{ marginLeft: '20px', margin: '0' }}>
                <li><strong>ANOVA Welch:</strong> Use ANOVA que no asume varianzas iguales</li>
                <li><strong>Transformaciones:</strong> Considere log, ra√≠z cuadrada para estabilizar varianzas</li>
                <li><strong>Pruebas robustas:</strong> Emplee Kruskal-Wallis (no param√©trica)</li>
                <li><strong>An√°lisis por separado:</strong> Compare grupos con varianzas similares</li>
                <li><strong>Investigaci√≥n:</strong> Identifique causas de la heterogeneidad</li>
                <li><strong>Modelos mixtos:</strong> Considere efectos aleatorios para variabilidad</li>
              </ul>
            </div>
          ) : (
            <div style={{ backgroundColor: '#e8f5e8', padding: '15px', borderRadius: '8px', border: '1px solid #4caf50' }}>
              <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>Dado que las varianzas son homog√©neas:</p>
              <ul style={{ marginLeft: '20px', margin: '0' }}>
                <li><strong>ANOVA cl√°sica:</strong> Proceda con an√°lisis de varianza est√°ndar</li>
                <li><strong>Pruebas post-hoc:</strong> Use Tukey, Bonferroni, o Scheff√©</li>
                <li><strong>Intervalos de confianza:</strong> Calcule con varianza pooled</li>
                <li><strong>Modelos lineales:</strong> Los supuestos se cumplen adecuadamente</li>
                <li><strong>Potencia estad√≠stica:</strong> Los tests tendr√°n potencia √≥ptima</li>
                <li><strong>Interpretaci√≥n:</strong> Los resultados ser√°n m√°s confiables</li>
              </ul>
            </div>
          )}
        </div>

        <div style={{ 
          backgroundColor: '#e3f2fd', 
          padding: '15px', 
          borderRadius: '8px', 
          border: '1px solid #2196f3',
          fontSize: '13px'
        }}>
          <p style={{ margin: '0', fontWeight: 'bold', color: '#1976d2' }}>
            üìù NOTA T√âCNICA: La prueba de Levene es m√°s robusta que la prueba de Bartlett ante desviaciones 
            de normalidad. Sin embargo, es sensible a outliers. Si encuentra heterogeneidad, verifique 
            primero la presencia de valores at√≠picos antes de aplicar transformaciones. La homogeneidad 
            de varianzas es crucial para la validez de ANOVA y la interpretaci√≥n correcta de los resultados.
          </p>
        </div>
      </div>
    );
  };

  const getAnovaContent = () => {
    if (!resultados.anova) return <div>No hay datos disponibles</div>;
    
    const tratamientos = [...new Set(resultados.tratamientos.map(d => d.tratamiento))];
    const datos = resultados.tratamientos;
    
    // Calcular estad√≠sticas por tratamiento
    const estadisticasPorTratamiento = tratamientos.map(tratamiento => {
      const datosTratamiento = datos.filter(d => d.tratamiento === tratamiento).map(d => parseFloat(d.resultado)).filter(v => !isNaN(v));
      const media = datosTratamiento.reduce((a, b) => a + b, 0) / datosTratamiento.length;
      const varianza = datosTratamiento.reduce((sum, val) => sum + Math.pow(val - media, 2), 0) / (datosTratamiento.length - 1);
      const desviacion = Math.sqrt(varianza);
      
      return {
        tratamiento,
        n: datosTratamiento.length,
        media,
        desviacionEstandar: desviacion,
        varianza
      };
    });
    
    return (
      <div style={{ lineHeight: '1.6', fontSize: '14px' }}>
        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© es el An√°lisis de Varianza (ANOVA)?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            ANOVA es una t√©cnica estad√≠stica que compara las medias de tres o m√°s grupos para determinar 
            si existen diferencias estad√≠sticamente significativas entre ellos. Descompone la variabilidad 
            total en variabilidad entre grupos (tratamientos) y dentro de grupos (error), permitiendo 
            evaluar si los tratamientos tienen efectos diferentes sobre la variable respuesta.
          </p>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üî¨ ¬øC√≥mo se Aplic√≥ en sus Datos?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            Se analizaron <strong>{tratamientos.length} tratamientos</strong> con un total de <strong>{datos.length} observaciones</strong>. 
            ANOVA calcul√≥ el estad√≠stico F comparando la varianza entre tratamientos con la varianza dentro 
            de tratamientos. Los an√°lisis incluyen:
          </p>
          <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
            <li><strong>Tabla ANOVA:</strong> Fuentes de variaci√≥n, grados de libertad, sumas de cuadrados</li>
            <li><strong>Estad√≠stico F:</strong> Raz√≥n de varianzas para evaluar significancia</li>
            <li><strong>Gr√°ficos de medias:</strong> Comparaci√≥n visual de tratamientos con intervalos de confianza</li>
            <li><strong>Residuos:</strong> Verificaci√≥n de supuestos del modelo</li>
          </ul>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üìä Interpretaci√≥n de Resultados</h5>
          <div style={{ 
            padding: '15px', 
            backgroundColor: typeof resultados.anova === 'number' && resultados.anova < 0.05 ? '#e8f5e8' : '#ffebee',
            borderRadius: '8px',
            border: '2px solid ' + (typeof resultados.anova === 'number' && resultados.anova < 0.05 ? '#4caf50' : '#f44336'),
            marginBottom: '15px'
          }}>
            <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>
              {typeof resultados.anova === 'number' && resultados.anova < 0.05 ? 
                '‚úÖ CONCLUSI√ìN: Existen diferencias significativas entre tratamientos' : 
                '‚ùå CONCLUSI√ìN: No hay diferencias significativas entre tratamientos'}
            </p>
            <p style={{ margin: '0', fontSize: '13px' }}>
              <strong>Estad√≠stico F:</strong> {'N/A'} 
              (valores altos indican mayor diferencia entre tratamientos)<br/>
              <strong>P-valor:</strong> {typeof resultados.anova === 'number' ? resultados.anova.toFixed(4) : 'N/A'} 
              (si p menor que 0.05, hay diferencias significativas)<br/>
              <strong>Tratamientos comparados:</strong> {tratamientos.length} grupos ({tratamientos.join(', ')})
            </p>
          </div>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© Significan estos Resultados?</h5>
          {typeof resultados.anova === 'number' && resultados.anova < 0.05 ? (
            <div>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
                <strong>Hay diferencias significativas</strong> entre al menos dos tratamientos. Esto significa que:
              </p>
              <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
                <li>Los tratamientos tienen efectos diferentes sobre la variable respuesta</li>
                <li>La variabilidad entre grupos es mayor que la variabilidad dentro de grupos</li>
                <li>Al menos un tratamiento se comporta de manera diferente a los dem√°s</li>
                <li>Los factores experimentales tienen un efecto real y medible</li>
              </ul>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify', fontWeight: 'bold', color: '#388e3c' }}>
                ‚úÖ IMPLICACIONES: Proceda con an√°lisis post-hoc para identificar qu√© tratamientos difieren.
              </p>
            </div>
          ) : (
            <div>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
                <strong>No hay diferencias significativas</strong> entre los tratamientos. Esto significa que:
              </p>
              <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
                <li>Todos los tratamientos tienen efectos similares</li>
                <li>La variabilidad observada puede deberse al azar</li>
                <li>No hay evidencia de que los factores experimentales tengan efecto</li>
                <li>Las diferencias observadas no son estad√≠sticamente relevantes</li>
              </ul>
              <p style={{ margin: '0 0 10px 0', textAlign: 'justify', fontWeight: 'bold', color: '#d32f2f' }}>
                ‚ö†Ô∏è IMPLICACIONES: No se justifican an√°lisis post-hoc. Considere revisar dise√±o experimental.
              </p>
            </div>
          )}
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üìà An√°lisis Detallado por Tratamiento</h5>
          <div style={{ backgroundColor: '#f5f5f5', padding: '15px', borderRadius: '8px', marginBottom: '15px' }}>
            {estadisticasPorTratamiento.map((trat, index) => (
              <div key={index} style={{ marginBottom: '10px', fontSize: '13px' }}>
                <strong>Tratamiento {trat.tratamiento}:</strong> n={trat.n}, 
                Media={trat.media.toFixed(3)}, 
                DE={trat.desviacionEstandar.toFixed(3)}, 
                Varianza={trat.varianza.toFixed(3)}
              </div>
            ))}
          </div>
        </div>

        <div style={{ marginBottom: '15px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üí° Recomendaciones Espec√≠ficas</h5>
          {typeof resultados.anova === 'number' && resultados.anova < 0.05 ? (
            <div style={{ backgroundColor: '#e8f5e8', padding: '15px', borderRadius: '8px', border: '1px solid #4caf50' }}>
              <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>Dado que hay diferencias significativas:</p>
              <ul style={{ marginLeft: '20px', margin: '0' }}>
                <li><strong>An√°lisis post-hoc:</strong> Use Duncan, Tukey, o Bonferroni para comparaciones m√∫ltiples</li>
                <li><strong>Identificaci√≥n:</strong> Determine cu√°les tratamientos son superiores</li>
                <li><strong>Magnitud del efecto:</strong> Calcule eta cuadrado para evaluar importancia pr√°ctica</li>
                <li><strong>Validaci√≥n:</strong> Replique el experimento para confirmar resultados</li>
                <li><strong>Implementaci√≥n:</strong> Considere adoptar el mejor tratamiento</li>
                <li><strong>Optimizaci√≥n:</strong> Explore combinaciones o niveles intermedios</li>
              </ul>
            </div>
          ) : (
            <div style={{ backgroundColor: '#fff3e0', padding: '15px', borderRadius: '8px', border: '1px solid #ff9800' }}>
              <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>Dado que no hay diferencias significativas:</p>
              <ul style={{ marginLeft: '20px', margin: '0' }}>
                <li><strong>Revisi√≥n del dise√±o:</strong> Eval√∫e si el tama√±o de muestra es adecuado</li>
                <li><strong>Potencia estad√≠stica:</strong> Calcule si el experimento puede detectar diferencias</li>
                <li><strong>Factores adicionales:</strong> Considere variables no controladas</li>
                <li><strong>Criterio econ√≥mico:</strong> Seleccione el tratamiento m√°s econ√≥mico</li>
                <li><strong>An√°lisis exploratorio:</strong> Busque patrones o tendencias no significativas</li>
                <li><strong>Replicaci√≥n:</strong> Aumente el n√∫mero de observaciones</li>
              </ul>
            </div>
          )}
        </div>

        <div style={{ 
          backgroundColor: '#e3f2fd', 
          padding: '15px', 
          borderRadius: '8px', 
          border: '1px solid #2196f3',
          fontSize: '13px'
        }}>
          <p style={{ margin: '0', fontWeight: 'bold', color: '#1976d2' }}>
            üìù NOTA T√âCNICA: ANOVA asume normalidad, homogeneidad de varianzas e independencia. 
            Verifique estos supuestos antes de interpretar resultados. Si ANOVA es significativa, 
            indica que al menos un par de medias difiere, pero no especifica cu√°les. Use an√°lisis 
            post-hoc para comparaciones espec√≠ficas y controle la tasa de error tipo I.
          </p>
        </div>
      </div>
    );
  };

  const getDuncanContent = () => {
    if (!resultados.duncan) return <div>No hay datos disponibles</div>;
    
    const tratamientos = [...new Set(resultados.tratamientos.map(d => d.tratamiento))];
    const datos = resultados.tratamientos;
    
    // Calcular estad√≠sticas por tratamiento
    const estadisticasPorTratamiento = tratamientos.map(tratamiento => {
      const datosTratamiento = datos.filter(d => d.tratamiento === tratamiento).map(d => parseFloat(d.resultado)).filter(v => !isNaN(v));
      const media = datosTratamiento.reduce((a, b) => a + b, 0) / datosTratamiento.length;
      const varianza = datosTratamiento.reduce((sum, val) => sum + Math.pow(val - media, 2), 0) / (datosTratamiento.length - 1);
      const desviacion = Math.sqrt(varianza);
      
      return {
        tratamiento,
        n: datosTratamiento.length,
        media,
        desviacionEstandar: desviacion
      };
    });
    
    // Ordenar por media para mostrar ranking
    const tratamientosOrdenados = [...estadisticasPorTratamiento].sort((a, b) => b.media - a.media);
    
    return (
      <div style={{ lineHeight: '1.6', fontSize: '14px' }}>
        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© es la Prueba de Duncan?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            La prueba de Duncan (Duncan's Multiple Range Test) es un m√©todo de comparaciones m√∫ltiples 
            post-hoc que se aplica despu√©s de un ANOVA significativo. Agrupa los tratamientos en 
            subconjuntos homog√©neos, donde tratamientos en el mismo grupo no difieren significativamente 
            entre s√≠, pero s√≠ difieren de tratamientos en otros grupos. Es menos conservativa que 
            Tukey pero m√°s que LSD.
          </p>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üî¨ ¬øC√≥mo se Aplic√≥ en sus Datos?</h5>
          <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
            Se compararon <strong>{tratamientos.length} tratamientos</strong> mediante comparaciones por pares, 
            utilizando rangos cr√≠ticos que aumentan con la distancia entre medias ordenadas. El procedimiento 
            identifica grupos homog√©neos y establece un ranking de tratamientos. Los an√°lisis incluyen:
          </p>
          <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
            <li><strong>Grupos Homog√©neos:</strong> Tratamientos estad√≠sticamente similares</li>
            <li><strong>Ranking de Medias:</strong> Ordenamiento de mejor a peor tratamiento</li>
            <li><strong>Diferencias M√≠nimas:</strong> Rangos cr√≠ticos para cada comparaci√≥n</li>
            <li><strong>Significancia:</strong> Identificaci√≥n de diferencias estad√≠sticamente relevantes</li>
          </ul>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üìä Interpretaci√≥n de Resultados</h5>
          <div style={{ 
            padding: '15px', 
            backgroundColor: '#e8f5e8',
            borderRadius: '8px',
            border: '2px solid #4caf50',
            marginBottom: '15px'
          }}>
            <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>
              ‚úÖ CONCLUSI√ìN: Se identificaron grupos homog√©neos entre tratamientos
            </p>
            <p style={{ margin: '0', fontSize: '13px' }}>
              <strong>Grupos formados:</strong> Los tratamientos se agruparon seg√∫n similitud estad√≠stica<br/>
              <strong>Mejor tratamiento:</strong> {tratamientosOrdenados[0]?.tratamiento} (Media: {tratamientosOrdenados[0]?.media.toFixed(3)})<br/>
              <strong>Rango de medias:</strong> {tratamientosOrdenados[tratamientosOrdenados.length-1]?.media.toFixed(3)} - {tratamientosOrdenados[0]?.media.toFixed(3)}
            </p>
          </div>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üéØ ¬øQu√© Significan estos Resultados?</h5>
          <div>
            <p style={{ margin: '0 0 10px 0', textAlign: 'justify' }}>
              La prueba de Duncan <strong>identific√≥ grupos estad√≠sticamente homog√©neos</strong>. Esto significa que:
            </p>
            <ul style={{ marginLeft: '20px', marginBottom: '10px' }}>
              <li>Tratamientos en el mismo grupo tienen efectos estad√≠sticamente similares</li>
              <li>Tratamientos en grupos diferentes tienen efectos significativamente distintos</li>
              <li>Se puede establecer un ranking confiable de tratamientos</li>
              <li>Las diferencias observadas son estad√≠sticamente v√°lidas</li>
            </ul>
            <p style={{ margin: '0 0 10px 0', textAlign: 'justify', fontWeight: 'bold', color: '#388e3c' }}>
              ‚úÖ IMPLICACIONES: Puede seleccionar el mejor tratamiento o grupo de tratamientos √≥ptimos.
            </p>
          </div>
        </div>

        <div style={{ marginBottom: '20px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üìà An√°lisis Detallado por Grupo</h5>
          <div style={{ backgroundColor: '#f5f5f5', padding: '15px', borderRadius: '8px', marginBottom: '15px' }}>
            <p style={{ margin: '0 0 10px 0', fontWeight: 'bold', fontSize: '13px' }}>Ranking de Tratamientos (Mayor a Menor):</p>
            {tratamientosOrdenados.map((trat, index) => (
              <div key={index} style={{ 
                marginBottom: '8px', 
                fontSize: '13px',
                padding: '8px',
                backgroundColor: index === 0 ? '#e8f5e8' : '#ffffff',
                borderRadius: '4px',
                border: index === 0 ? '2px solid #4caf50' : '1px solid #ddd'
              }}>
                <strong>#{index + 1} - {trat.tratamiento}:</strong> Media={trat.media.toFixed(3)} ¬± {trat.desviacionEstandar.toFixed(3)} (n={trat.n})
                {index === 0 && <span style={{ color: '#4caf50', fontWeight: 'bold' }}> ‚Üê MEJOR</span>}
              </div>
            ))}
          </div>
        </div>

        <div style={{ marginBottom: '15px' }}>
          <h5 style={{ color: '#6F4E37', marginBottom: '10px' }}>üí° Recomendaciones Espec√≠ficas</h5>
          <div style={{ backgroundColor: '#e8f5e8', padding: '15px', borderRadius: '8px', border: '1px solid #4caf50' }}>
            <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>Basado en los grupos identificados:</p>
            <ul style={{ marginLeft: '20px', margin: '0' }}>
              <li><strong>Selecci√≥n √ìptima:</strong> Considere el tratamiento {tratamientosOrdenados[0]?.tratamiento} como primera opci√≥n</li>
              <li><strong>Alternativas:</strong> Tratamientos en el mismo grupo son equivalentes estad√≠sticamente</li>
              <li><strong>Costo-Beneficio:</strong> Eval√∫e costos entre tratamientos del grupo superior</li>
              <li><strong>Validaci√≥n:</strong> Confirme resultados con experimentos independientes</li>
              <li><strong>Implementaci√≥n:</strong> Proceda con confianza usando el mejor grupo</li>
              <li><strong>Monitoreo:</strong> Establezca controles de calidad basados en estos resultados</li>
            </ul>
          </div>
        </div>

        <div style={{ 
          backgroundColor: '#e3f2fd', 
          padding: '15px', 
          borderRadius: '8px', 
          border: '1px solid #2196f3',
          fontSize: '13px'
        }}>
          <p style={{ margin: '0', fontWeight: 'bold', color: '#1976d2' }}>
            üìù NOTA T√âCNICA: La prueba de Duncan es v√°lida solo despu√©s de un ANOVA significativo. 
            Controla la tasa de error tipo I de manera menos estricta que Tukey, lo que la hace 
            m√°s sensible para detectar diferencias pero con mayor riesgo de falsos positivos. 
            Los grupos homog√©neos pueden solaparse, indicando que algunos tratamientos pertenecen 
            a m√∫ltiples grupos.
          </p>
        </div>
      </div>
    );
  };

  const exportToExcel = () => {
    const wb = XLSX.utils.book_new();
    
    // Si hay un modal abierto, exportar el contenido espec√≠fico del modal
    if (modalAbierto) {
      const modalContent = document.querySelector('[class*="InformeModal_modalBody"], .modalBody, [class*="modalBody"]');
      if (modalContent) {
        const textContent = modalContent.innerText || '';
        const lines = textContent.split('\n').filter(line => line.trim() !== '');
        
        const data = [
          ['INFORME DETALLADO DE AN√ÅLISIS ESTAD√çSTICO'],
          ['Tipo de Prueba:', `Informe Detallado - ${modalAbierto.toUpperCase()}`],
          ['Fecha de Generaci√≥n:', new Date().toLocaleDateString()],
          ['Hora de Generaci√≥n:', new Date().toLocaleTimeString()],
          [''],
          ['CONTENIDO COMPLETO DEL INFORME:'],
          [''],
          ...lines.map(line => [line])
        ];

        const ws = XLSX.utils.aoa_to_sheet(data);
        
        // Configurar ancho de columnas
        const colWidths = [{ wch: 100 }];
        ws['!cols'] = colWidths;
        
        XLSX.utils.book_append_sheet(wb, ws, 'Informe Detallado');
        XLSX.writeFile(wb, `informe_detallado_${modalAbierto}.xlsx`);
        return;
      }
    }
    
    // Hoja 1: Informaci√≥n General
    const generalData = [
      ['RESULTADOS ESTAD√çSTICOS COMPLETOS'],
      ['Fecha de Generaci√≥n:', new Date().toLocaleDateString()],
      ['Hora de Generaci√≥n:', new Date().toLocaleTimeString()],
      [''],
      ['RESUMEN DE PRUEBAS REALIZADAS:'],
      ['‚úì Prueba de Shapiro-Wilk (Normalidad)'],
      ['‚úì Prueba de Levene (Homogeneidad de Varianzas)'],
      ['‚úì An√°lisis de Varianza (ANOVA)'],
      ['‚úì Prueba de Duncan (Comparaciones M√∫ltiples)'],
      ['']
    ];
    
    if (resultados.shapiro) {
      generalData.push(
        ['RESULTADOS SHAPIRO-WILK:'],
        ['Estad√≠stico W:', resultados.shapiro.W || 'N/A'],
        ['Valor p:', resultados.shapiro.pValor || 'N/A'],
        ['Interpretaci√≥n:', resultados.shapiro.pValor > 0.05 ? 'Datos siguen distribuci√≥n normal' : 'Datos NO siguen distribuci√≥n normal'],
        ['']
      );
    }
    
    if (resultados.levene) {
      generalData.push(
        ['RESULTADOS LEVENE:'],
        ['Estad√≠stico F:', resultados.levene.estadistico || 'N/A'],
        ['Valor p:', resultados.levene.pValor || 'N/A'],
        ['Interpretaci√≥n:', resultados.levene.pValor > 0.05 ? 'Varianzas homog√©neas' : 'Varianzas NO homog√©neas'],
        ['']
      );
    }
    
    if (resultados.anova) {
      generalData.push(
        ['RESULTADOS ANOVA:'],
        ['Estad√≠stico F:', resultados.anova.estadistico || 'N/A'],
        ['Valor p:', resultados.anova.pValor || 'N/A'],
        ['Interpretaci√≥n:', resultados.anova.pValor < 0.05 ? 'Existen diferencias significativas entre tratamientos' : 'NO existen diferencias significativas'],
        ['']
      );
    }
    
    const wsGeneral = XLSX.utils.aoa_to_sheet(generalData);
    wsGeneral['!cols'] = [{ wch: 50 }, { wch: 30 }];
    XLSX.utils.book_append_sheet(wb, wsGeneral, 'Resumen General');
    
    // Hoja 2: Datos de Tratamientos
    if (resultados.tratamientos && resultados.tratamientos.length > 0) {
      const tratamientosData = [
        ['DATOS DE TRATAMIENTOS'],
        [''],
        ['Tratamiento', 'Resultado', 'Descripci√≥n']
      ];
      
      resultados.tratamientos.forEach(t => {
        tratamientosData.push([
          t.nombretto || 'N/A',
          typeof t.resultado === 'number' ? t.resultado.toFixed(3) : 'N/A',
          t.descripcion || 'Sin descripci√≥n'
        ]);
      });
      
      const wsTratamientos = XLSX.utils.aoa_to_sheet(tratamientosData);
      wsTratamientos['!cols'] = [{ wch: 20 }, { wch: 15 }, { wch: 40 }];
      XLSX.utils.book_append_sheet(wb, wsTratamientos, 'Tratamientos');
    }
    
    // Hoja 3: Resultados Duncan
    if (resultados.duncan && resultados.duncan.length > 0) {
      const duncanData = [
        ['RESULTADOS PRUEBA DE DUNCAN'],
        [''],
        ['Tratamiento', 'Media', 'Grupo Homog√©neo', 'Ranking']
      ];
      
      resultados.duncan.forEach((d, index) => {
        duncanData.push([
          d.tratamiento || 'N/A',
          typeof d.media === 'number' ? d.media.toFixed(3) : 'N/A',
          d.grupo || 'N/A',
          index + 1
        ]);
      });
      
      const wsDuncan = XLSX.utils.aoa_to_sheet(duncanData);
      wsDuncan['!cols'] = [{ wch: 20 }, { wch: 15 }, { wch: 20 }, { wch: 10 }];
      XLSX.utils.book_append_sheet(wb, wsDuncan, 'Duncan');
    }
    
    // Aplicar estilos a los encabezados
    [wsGeneral, wb.Sheets['Tratamientos'], wb.Sheets['Duncan']].forEach(ws => {
      if (!ws) return;
      const range = XLSX.utils.decode_range(ws['!ref'] || 'A1');
      for (let R = 0; R <= Math.min(2, range.e.r); R++) {
        for (let C = range.s.c; C <= range.e.c; C++) {
          const cell_address = XLSX.utils.encode_cell({ c: C, r: R });
          if (!ws[cell_address]) continue;
          
          if (R === 0 || (ws[cell_address].v && typeof ws[cell_address].v === 'string' && ws[cell_address].v.includes(':'))) {
            ws[cell_address].s = {
              font: { bold: true },
              alignment: { horizontal: 'center' }
            };
          }
        }
      }
    });
    
    XLSX.writeFile(wb, 'resultados-completo.xlsx');
  };

  if (loading) {
    return (
      <div className={styles.container}>
        <HeaderMenu />
        <div className={styles.loadingContainer}>
          <div className={styles.spinner}></div>
          <p>Procesando pruebas estad√≠sticas...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className={styles.container}>
        <HeaderMenu />
        <div className={styles.errorContainer}>
          <p className={styles.errorMessage}>{error}</p>
          <button 
            className={styles.backButton}
            onClick={() => navigate(-1)}
          >
            <FaArrowLeft /> Volver
          </button>
        </div>
      </div>
    );
  }

  if (!resultados) return null;

  return (
    <>
      <HeaderMenu />
      <div className={styles.resultadosContainer}>
        <div ref={modalRef} className={styles.resultadosContenido}>
          <h2>Resultados Estad√≠sticos</h2>
          <div className={styles.pruebasEstadisticas}>
            <h3>Pruebas de Normalidad y Homogeneidad</h3>
            <div className={styles.pruebaDetalle}>
              <h4>üìä Prueba de Shapiro-Wilk (Normalidad)</h4>
              {resultados.shapiro?.W ? (
                <div className={styles.shapiroResultados}>
                  <div className={styles.resultado}>
                    {resultados.shapiro.pValor > 0.05 ? (
                      <span className={styles.exito}>‚úÖ Los datos siguen una distribuci√≥n normal</span>
                    ) : (
                      <span className={styles.advertencia}>‚ö†Ô∏è Los datos NO siguen una distribuci√≥n normal</span>
                    )}
                  </div>
                  <button 
                    className={styles.verInformeBtn}
                    onClick={() => abrirModal('shapiro')}
                  >
                    <FaEye /> Ver Informe Detallado
                  </button>
                </div>
              ) : (
                <div className={styles.noData}>
                  <p>No hay datos de Shapiro-Wilk disponibles</p>
                </div>
              )}
            
            {/* Gr√°fico de Shapiro-Wilk */}
            <GraficoShapiro 
              datos={resultados.tratamientos}
              resultadosShapiro={resultados.shapiro}
            />
            </div>
            <div className={styles.pruebaDetalle}>
              <h4>üìä Prueba de Levene (Homogeneidad)</h4>
              <div className={styles.shapiroResultados}>
                <div className={styles.resultado}>
                  {resultados.levene > 0.05 ? (
                    <span className={styles.exito}>‚úÖ Homogeneidad confirmada</span>
                  ) : (
                    <span className={styles.advertencia}>‚ö†Ô∏è Varianzas heterog√©neas</span>
                  )}
                </div>
                <button 
                  className={styles.verInformeBtn}
                  onClick={() => abrirModal('levene')}
                >
                  <FaEye /> Ver Informe Detallado
                </button>
              </div>
            </div>
            
            {/* Gr√°fico de Levene */}
            <GraficoLevene 
              datos={resultados.tratamientos}
              resultadosLevene={{
                pValor: resultados.levene
              }}
            />
          </div>

          <div className={styles.pruebasEstadisticas}>
            <h3>An√°lisis de Varianza (ANOVA)</h3>
            <div className={styles.pruebaDetalle}>
              <h4>üìä ANOVA</h4>
              <div className={styles.shapiroResultados}>
                <div className={styles.resultado}>
                  {resultados.anova < 0.05 ? (
                    <span className={styles.advertencia}>‚ö†Ô∏è Hay diferencias significativas</span>
                  ) : (
                    <span className={styles.exito}>‚úÖ No hay diferencias significativas</span>
                  )}
                </div>
                <button 
                  className={styles.verInformeBtn}
                  onClick={() => abrirModal('anova')}
                >
                  <FaEye /> Ver Informe Detallado
                </button>
              </div>
            </div>
            
            {/* Gr√°fico de ANOVA */}
            <GraficoAnova 
              datos={resultados.tratamientos}
              resultadosAnova={{
                F: resultados.anovaF,
                pValor: resultados.anova
              }}
            />
          </div>


          {/* Informe de Duncan */}
          {resultados.duncan && resultados.duncan.length > 0 && (
            <div className={styles.pruebasEstadisticas} style={{ marginTop: '30px' }}>
              <h3>Prueba de Duncan (Comparaciones M√∫ltiples)</h3>
              <div className={styles.pruebaDetalle}>
                <h4>üìä An√°lisis de Duncan</h4>
                <div className={styles.shapiroResultados}>
                  <div className={styles.resultado}>
                    <span className={styles.exito}>‚úÖ An√°lisis de comparaciones m√∫ltiples completado</span>
                  </div>
                  <button 
                    className={styles.verInformeBtn}
                    onClick={() => abrirModal('duncan')}
                  >
                    <FaEye /> Ver Informe Detallado
                  </button>
                </div>
              </div>
              <GraficoDuncan 
                datos={resultados.tratamientos} 
                resultadosDuncan={resultados.duncan}
              />
            </div>
          )}

          <h3>Gr√°fico de Dispersi√≥n</h3>
          <Plot
            data={[
              {
                x: resultados.tratamientos.map((t) => t.nombretto),
                y: resultados.tratamientos.map((t) => Number(t.resultado)),
                mode: "markers",
                type: "scatter",
              },
            ]}
            layout={{
              width: 500,
              height: 400,
              title: "Dispersi√≥n Tratamientos vs Resultado",
            }}
          />

          <h3>Boxplot</h3>
          <Plot
            data={[
              {
                y: resultados.tratamientos.map((t) => Number(t.resultado)),
                x: resultados.tratamientos.map((t) => t.nombretto),
                type: "box",
                boxpoints: "all",
              },
            ]}
            layout={{
              width: 500,
              height: 400,
              title: "Distribuci√≥n por Tratamiento",
            }}
          />
        </div>

        <div className={styles.botonesExportacion}>
          <button onClick={exportToImage}>
            <FaImage /> Exportar Imagen
          </button>
          <button onClick={exportToPDF}>
            <FaFilePdf /> Exportar PDF
          </button>
          <button onClick={exportToExcel}>
            <FaFileExcel /> Exportar Excel
          </button>
          <button onClick={() => navigate(-1)}>
            <FaArrowLeft /> Volver
          </button>
        </div>
      </div>

      {/* Modales para informes detallados */}
      <InformeModal
        isOpen={modalAbierto === 'shapiro'}
        onClose={cerrarModal}
        title="Informe Detallado - Prueba de Shapiro-Wilk"
        testType="shapiro"
      >
        {getShapiroContent()}
      </InformeModal>

      <InformeModal
        isOpen={modalAbierto === 'levene'}
        onClose={cerrarModal}
        title="Informe Detallado - Prueba de Levene"
        testType="levene"
      >
        {getLeveneContent()}
      </InformeModal>

      <InformeModal
        isOpen={modalAbierto === 'anova'}
        onClose={cerrarModal}
        title="Informe Detallado - An√°lisis de Varianza (ANOVA)"
        testType="anova"
      >
        {getAnovaContent()}
      </InformeModal>

      <InformeModal
        isOpen={modalAbierto === 'duncan'}
        onClose={cerrarModal}
        title="Informe Detallado - Prueba de Duncan"
        testType="duncan"
      >
        {getDuncanContent()}
      </InformeModal>
    </>
  );
};

export default Resultados;